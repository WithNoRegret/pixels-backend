package db

import (
	"context"
	"log"
	"pixel-battle-backend/models"

	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
)

func InitDB(client *mongo.Client) error {
	collection := client.Database("pixels").Collection("pixels")

	indexModel := mongo.IndexModel{
		Keys:    bson.D{{Key: "index", Value: 1}},
		Options: options.Index().SetUnique(true),
	}

	_, err := collection.Indexes().CreateOne(context.TODO(), indexModel)
	if err != nil {
		return err
	}

	log.Print("‚úÖ –ò–Ω–¥–µ–∫—Å –Ω–∞ 'index' —Å–æ–∑–¥–∞–Ω (–∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
	return nil
}

func InitBoard(client *mongo.Client) error {
	collection := client.Database("pixels").Collection("pixels")

	count, err := collection.CountDocuments(context.TODO(), bson.M{})
	if err != nil {
		return err
	}

	if count > 0 {
		log.Printf("‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è 'pixels' —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç %d –∑–∞–ø–∏—Å–µ–π. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞.", count)
		return nil
	}

	log.Println("üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è 10‚ÄØ000 –ø–∏–∫—Å–µ–ª–µ–π —Å —Ü–≤–µ—Ç–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (9: –ë–µ–ª—ã–π)...")

	var board []interface{}
	for i := 1; i <= 10000; i++ {
		board = append(board, models.Pixel{
			Index: i,
			Color: 9,
		})
	}

	_, err = collection.InsertMany(context.TODO(), board)
	if err != nil {
		return err
	}
	log.Println("‚úÖ –î–æ—Å–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
	return nil
}
